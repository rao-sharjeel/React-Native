/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 * @flow strict-local
 */
 import auth from '@react-native-firebase/auth';
 import React from 'react';
 import React, { useState, useEffect } from 'react';
 import {
   SafeAreaView,
   StyleSheet,
   ScrollView,
   View,
   Text,
   StatusBar,
   Button,
 } from 'react-native';
import { TextInput } from 'react-native-gesture-handler';
 
 import {
   Header,
   LearnMoreLinks,
   Colors,
   DebugInstructions,
   ReloadInstructions,
 } from 'react-native/Libraries/NewAppScreen';
 
 function App() {
  // Set an initializing state whilst Firebase connects
  const [initializing, setInitializing] = useState(true);
  const [user, setUser] = useState();

  // Handle user state changes
  function onAuthStateChanged(user) {
    setUser(user);
    if (initializing) setInitializing(false);
  }

  useEffect(() => {
    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);
    return subscriber; // unsubscribe on unmount
  }, []);

  if (initializing) return null;

  if (!user) {
    return (
      <View>
        <Text>Login</Text>
      </View>
    );
  }

  return (
    <View>
      <Text>Welcome {user.email}</Text>
    </View>
  );
}

 auth()
  .createUserWithEmailAndPassword('jane.doe@example.com', 'SuperSecretPassword!')
  .then(() => {
    console.log('User account created & signed in!');
  })
  .catch(error => {
    if (error.code === 'auth/email-already-in-use') {
      console.log('That email address is already in use!');
    }

    if (error.code === 'auth/invalid-email') {
      console.log('That email address is invalid!');
    }

    console.error(error);
  });

 const App: () => React$Node = () => {
   return (

    <View style= {styles.mainView}>
      <View style = {styles.empty}></View>
      <View style = {styles.TitleView}>
        <Text style = {styles.title}> This is my app</Text>
        <TextInput style= {styles.in} placeholder='Username'/>
        <TextInput style= {styles.in} placeholder='Password'/>
      </View>
      <View style = {styles.empty}> 
        <Button
          onPress={auth}
          title="Sign in"
          color="blue"
          
          accessibilityLabel="Learn more about this purple button"
       />
      </View>
    </View>
       
   );
 };
 
 const styles = StyleSheet.create({
   mainView: {
     backgroundColor: 'dodgerblue',
     flex:1,
   },

   empty: {
     backgroundColor: 'white',
     flex: 1,
   },

   in: {
    backgroundColor: 'lightgray',
    fontSize: 18,
    padding: 10,
    // border: 3,
    borderRadius: 2,
    borderWidth: 2,
    borderColor: 'white',
    textAlign: 'center',
    marginLeft:34,
    marginTop:0,
    marginBottom:10,
    marginRight:40,
  
    borderRadius:10,

    // textAllign: 'center',
    flex: 1,
  },
   title: {
    //  backgroundColor: Colors.white,
     fontSize: 40,
     paddingTop: 30,
     paddingBottom: 30,
     fontWeight: 'bold',
     justifyContent: 'center',
     textAlignVertical: 'center',
     textAlign: 'center',
     flex: 2,
     color: 'white',
   },
   sectionContainer: {
     marginTop: 32,
     paddingHorizontal: 24,
   },
   TitleView: {
     fontSize: 40,
     fontWeight: '600',
     color: Colors.white,
     backgroundColor:"dodgerblue",
    //  borderRadius: 30,
    //  borderWidth:1,
     flex: 1.5,
   },
   sectionDescription: {
     marginTop: 8,
     fontSize: 18,
     fontWeight: '400',
    //  alignItems: 'center',
    //  justifyContent: 'center',
    //  alignContent: 'center',
     color: Colors.dark,
   },
   highlight: {
     fontWeight: '700',
   },
   footer: {
     color: Colors.dark,
     fontSize: 12,
     fontWeight: '600',
     padding: 4,
     paddingRight: 12,
     textAlign: 'right',
   },
 });
 
 export default App;
